Digit root of a given number
Write a program to find the repeated sum of digits of a number until it becomes a single-digit number.
Input Format:

The input contains an integer which denotes 'n'

Output Format:

Print the single digit number

Sample Input

88

Sample Output

7

Explanation:

Step 1: 8+8 = 16

Step 2: 1+6 = 7

sum of digits of a number until it becomes a single-digit number which is 7 here.









// C++ program to find digital root of a number 
#include<bits/stdc++.h> 
using namespace std; 

// Returns digital root of num 
int digitalRoot(string num) 
{ 
	// If num is 0. 
	if (num.compare("0") == 0) 
		return 0; 

	// Count sum of digits under mod 9 
	int ans = 0; 
	for (int i=0; i<num.length(); i++) 
		ans = (ans + num[i]-'0') % 9; 

	// If digit sum is multiple of 9, answer 
	// 9, else remainder with 9. 
	return (ans == 0)? 9 : ans % 9; 
} 

// Driver code 
int main() 
{ 
	string num; 
	cin>>num;

	// Calling digitalRoot function 
	cout<< digitalRoot(num) <<endl; 

	return 0; 
} 

// Note: Special case when num = "00..." 
// program will not give correct output. 
